<%
   subform = field
   subform_section = field.subform_section

   data_shared_subform = ""
   if form_group_id == 'violations'
     #This is necessary so grouped_subforms helper can find the violation subform
     violation_form_id = subform_section.unique_id
     violation_group_id = form_group_id
   elsif subform_section.shared_subform.present?
     #TODO MRM - figure out better way to do this
     #TODO - booo!!!!  This is bad. Refactor needed.  Don't do a DB query in a template
     shared_subform_section = FormSection.get_by_unique_id(subform_section.shared_subform)
     shared_subform_section_group_id = subform_section.shared_subform_group
     if shared_subform_section_group_id == 'violations'
       #This is necessary so grouped_subforms helper can find the violation subform
       violation_form_id = subform_section.shared_subform
       violation_group_id = shared_subform_section_group_id
     end
     data_shared_subform = "data-is_shared_subform=true data-shared_subform=#{subform_section.shared_subform}" if shared_subform_section.present?
   else
     shared_subform_section_group_id = nil
     violation_form_id = nil
     violation_group_id = nil
   end

   #TODO: a little redundant to re-count the subforms? (see grouped_subforms(formObject, subform))
   number_of_subforms = subforms_count(formObject, subform, form_group_id)

   if number_of_subforms > 0
     if violation_form_id.present? && violation_group_id.present?
       subform_object = get_subform_object(formObject, shared_subform_section, shared_subform_section_group_id, subform.name).presence ||
                        get_subform_object(formObject, subform_section, form_group_id, subform.name)
     else
       subform_object = get_subform_object(formObject, subform_section, form_group_id, subform.name)
     end

     #TODO: This code is being temporarily removed until JOR-141
     #      (users should only see their own referrals) is again revisited,
     #      Pending a full refactor of how we do nested forms headers
     # if subform.name == "transitions"
     #   # Recalculate the amount of subforms
     #   number_of_subforms = subform_object.count
     # end
   end
%>
<% if number_of_subforms == 0 %>
  <% if !subform.disabled %>
    <% unless subform.subform_section.is_summary_section || subform.subform_section.hide_subform_placeholder %>
      <div class="placeholder_text"> <%= subform_placeholder(field, subform) %></div>
    <% end %>
  <% end %>
<% else %>
  <div class="row">
    <div class="large-12 columns">
      <div id="<%= subform.name %>" class="subforms" <%=data_shared_subform%> data-form_group_id="<%= shared_subform_section_group_id if shared_subform_section_group_id.present? %>">
        <% if show_alerts?(@child) && subform.name.present? && @child.alerts.any? {|u| u['type'] == subform.name && u['alert_for'] == 'new_form'} %>
          <% incident_alert = @child.alerts.select {|u| u['type'] == subform.name && u['alert_for'] == 'new_form'} %>
          <% if subform.name == 'services_section'
              form_section_name = I18n.t('messages.service_provision')
             else
              form_section_name = subform["display_name_#{subform.base_language}"].downcase
             end
          %>
          <div id="<%= subform.name %>_change_alert" class="flash header_message alert_message row">
            <p class="notice large-12"><%= t('messages.form_sections_case_update_alert', form_section_name: form_section_name, alert_time: I18n.l(Date.parse(incident_alert.first.try(:[], 'date')))) %></p>
          </div>
        <% end %>
        <% subform_group = grouped_subforms(formObject, subform, violation_group_id, violation_form_id) %>
        <% subform_group.each do |grouped_subforms_header, grouped_subform_objects| %>
          <% if grouped_subforms_header.present? && grouped_subform_objects.present? %>
            <div class="subform_grouping_header row">
              <span class="subform_header medium-7 columns">
                <%= grouped_subforms_header %>
              </span>
            </div>
          <% end %>
          <% grouped_subform_objects.each do |grouped_subform_object| %>
            <%
              i = grouped_subform_object[1]
              formObject_i = subform_object[i]
              formObject_i[:hidden_name] = formObject.hidden_name
            %>
            <% subform_instance = formObject.send(subform.name)
            subform_instance = subform_instance[i] if subform_instance.present? %>
            <% if referral_user_and_transition?(subform_instance, subform) %>
            <div id="subform_container_<%= subform.name %>_<%= i %>" class="subform_container">
              <fieldset id="subform_<%= subform.name %>_<%= i %>" class="<%= subform.name %> subform no-border">
              <%= render partial: "form_section/subform_expand_collapse_header",
                        object: formObject,
                        locals: { formObject: formObject,
                                  subform_section: subform_section,
                                  subform: subform,
                                  i: i,
                                  form_group_id: form_group_id,
                                  view_mode: true,
                                  subform_object: formObject_i,
                                  grouped_subforms_header: grouped_subforms_header
                                }
              %>

              <% (subform_section.fields.select {|field| field.showable? }).each do |field| %>
                <% unless (field.name == "to_user_local_status" && formObject_i.is_remote == true) || (field.name == "to_user_local_status" && formObject_i.type == Transition::TYPE_REASSIGN) %>
                  <%= render partial: field_template_path(field, true),
                             locals: { field: field, formObject: formObject_i, lookups: lookups} %>
                <% end %>
              <% end %>
              </fieldset>
            </div>
           <% end %>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>
<% end %>
